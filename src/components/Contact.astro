---
import { Icon } from 'astro-icon/components';
import { useTranslations } from '../i18n/utils';
import { languages } from '../i18n/config';

// Import the new site-wide data
import site from '../data/site.json';

// The component now accepts 'lang' as a prop
export interface Props {
    lang: keyof typeof languages;
}
const { lang } = Astro.props;
const t = useTranslations(lang);
---
<section class="relative isolate">
    <div class="mx-auto grid max-w-7xl grid-cols-1 lg:grid-cols-2">
        <div class="relative px-6 pb-20 pt-24 sm:pt-32 lg:static lg:px-8 lg:py-24">
            <div class="mx-auto max-w-xl lg:mx-0 lg:max-w-lg">
                <h2 class="text-3xl font-bold tracking-tight text-gray-900">{t('contact.title')}</h2>
                <p class="mt-6 text-lg leading-8 text-gray-600">{t('contact.description')}</p>
                <dl class="mt-10 space-y-4 text-base leading-7 text-gray-600">
                    <div class="flex gap-x-4">
                        <dt class="flex-none">
                            <span class="sr-only">Bedrijfsnaam</span>
                            <Icon name="mdi:domain" class="h-7 w-6 text-gray-400" />
                        </dt>
                        <dd class="font-semibold">{site.name}</dd>
                    </div>
                    <div class="flex gap-x-4">
                        <dt class="flex-none">
                            <span class="sr-only">{t('contact.address_sr')}</span>
                            <Icon name="mdi:office-building-outline" class="h-7 w-6 text-gray-400" />
                        </dt>
                        <dd>{site.address.street}<br>{site.address.postalCode} {site.address.city}</dd>
                    </div>
                    <div class="flex gap-x-4">
                        <dt class="flex-none">
                            <span class="sr-only">{t('contact.phone_sr')}</span>
                            <Icon name="mdi:phone-outline" class="h-7 w-6 text-gray-400" />
                        </dt>
                        <dd><a class="hover:text-gray-900" href={`tel:${site.phone.replace(/\s/g, '')}`}>{site.phone}</a></dd>
                    </div>
                    <div class="flex gap-x-4">
                        <dt class="flex-none">
                            <span class="sr-only">{t('contact.email_sr')}</span>
                            <Icon name="mdi:email-outline" class="h-7 w-6 text-gray-400" />
                        </dt>
                        <dd><a class="hover:text-gray-900" href={`mailto:${site.email}`}>{site.email}</a></dd>
                    </div>
                </dl>
            </div>
        </div>
        <form id="contactForm" class="px-6 pb-24 pt-20 sm:pb-32 lg:px-8 lg:py-24" action="https://formspree.io/f/xyzjwgbk" method="POST">
            <div class="mx-auto max-w-xl lg:mr-0 lg:max-w-lg">
                <div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2">
                    <input type="text" name="_gotcha" style="display:none" />
                    <div class="sm:col-span-2">
                        <label for="name" class="block text-sm font-semibold leading-6 text-gray-900">{t('contact.form.name')}</label>
                        <div class="mt-2.5">
                            <input required type="text" name="name" id="name" autocomplete="name" class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-brand-600 sm:text-sm sm:leading-6">
                        </div>
                    </div>
                    <div class="sm:col-span-2">
                        <label for="email" class="block text-sm font-semibold leading-6 text-gray-900">{t('contact.form.email')}</label>
                        <div class="mt-2.5">
                            <input required type="email" name="email" id="email" autocomplete="email" class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-brand-600 sm:text-sm sm:leading-6">
                        </div>
                    </div>
                    <div class="sm:col-span-2">
                        <label for="phone" class="block text-sm font-semibold leading-6 text-gray-900">{t('contact.form.phone')}</label>
                        <div class="mt-2.5">
                            <input required type="tel" name="phone" id="phone" autocomplete="tel" class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-brand-600 sm:text-sm sm:leading-6">
                        </div>
                    </div>
                    <div class="sm:col-span-2">
                        <label for="message" class="block text-sm font-semibold leading-6 text-gray-900">{t('contact.form.message')}</label>
                        <div class="mt-2.5">
                            <textarea required name="message" id="message" rows="4" class="block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-brand-600 sm:text-sm sm:leading-6"></textarea>
                        </div>
                    </div>
                </div>
                <div class="mt-8 flex justify-end">
                    <button type="submit" class="rounded-md bg-brand-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-brand-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-brand-600">
                        {t('contact.form.submit')}
                    </button>
                </div>
                <div id="form-feedback" class="mt-4 text-sm font-medium"></div>
            </div>
        </form>
    </div>
</section>

<script define:vars={{
    successMessage: t('contact.form.feedback_success'),
    errorMessage: t('contact.form.feedback_error')
}}>
    const form = document.getElementById('contactForm');
    const feedbackEl = document.getElementById('form-feedback');

    async function handleSubmit(event) {
        event.preventDefault();
        const formData = new FormData(event.target);

        try {
            const response = await fetch(event.target.action, {
                method: 'POST',
                body: formData,
                headers: { 'Accept': 'application/json' }
            });

            if (response.ok) {
                feedbackEl.textContent = successMessage;
                feedbackEl.style.color = 'rgb(22 163 74)'; // Green-600
                form.reset();
            } else {
                feedbackEl.textContent = errorMessage;
                feedbackEl.style.color = 'rgb(220 38 38)'; // Red-600
            }
        } catch (error) {
            feedbackEl.textContent = errorMessage;
            feedbackEl.style.color = 'rgb(220 38 38)'; // Red-600
        }
    }

    form.addEventListener('submit', handleSubmit);
</script>