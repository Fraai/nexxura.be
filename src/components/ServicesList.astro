---
import { Image } from 'astro:assets';
import { languages } from '../i18n/config';
import { useTranslations } from '../i18n/utils';

// 1. Import the service data for ALL languages
import servicesNl from '../i18n/content/services.nl.json';
import servicesEn from '../i18n/content/services.en.json';

const allServicesData = {
    nl: servicesNl,
    en: servicesEn,
};

// 2. This component needs the 'lang' to know what to display
export interface Props {
    lang: keyof typeof languages;
}
const { lang } = Astro.props;
const t = useTranslations(lang);

// 3. Select the correct list of services for the current language
const services = allServicesData[lang];

// 4. Load all possible feature images for the service cards
const allFeatureImages = import.meta.glob<{ default: ImageMetadata }>('/src/assets/diensten/**/feature.{png,jpg,jpeg,webp}');
---

<section class="py-8">
    <div class="mx-auto max-w-7xl px-6 lg:px-8">
        <div class="mx-auto mt-16 grid max-w-2xl auto-rows-fr grid-cols-1 gap-8 sm:mt-20 lg:mx-0 lg:max-w-none lg:grid-cols-3">
            {services.map(service => {
                const imageModule = service.feature_image ? allFeatureImages[service.feature_image] : null;
                const detailUrl = `/${lang}/services/${service.slug}`;

                return (
                        <div class="relative isolate flex flex-col justify-end overflow-hidden rounded-2xl bg-brand-900 px-8 pb-8 pt-80 sm:pt-48 lg:pt-80">

                            {/* Background Image using Astro's <Image /> */}
                            {imageModule && (
                                    <Image
                                            src={imageModule()}
                                            alt={service.title}
                                            class="absolute inset-0 -z-10 h-full w-full object-cover"
                                            loading="eager"
                                    />
                            )}

                            {/* Gradient Overlay */}
                            <div class="absolute inset-0 -z-10 bg-linear-to-t from-gray-900 via-gray-900/40"></div>

                            {/* Ring/Border Effect */}
                            <div class="absolute inset-0 -z-10 rounded-2xl ring-1 ring-inset ring-gray-900/10"></div>

                            {/* Text Content */}
                            <h2 class="mt-3 text-lg font-semibold leading-6 text-white">
                                <a href={detailUrl}>
                                    <span class="absolute inset-0"></span>
                                    {service.title}
                                </a>
                            </h2>
                            <p class="mt-3 font-semibold leading-6 text-white">
                                {service.short_description}
                            </p>
                        </div>
                )
            })}
        </div>
    </div>
</section>